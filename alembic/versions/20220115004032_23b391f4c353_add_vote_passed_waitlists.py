"""Add vote passed waitlists

Revision ID: 23b391f4c353
Revises: 2f739f9896c9
Create Date: 2022-01-15 00:40:32.846429

"""
import sqlalchemy as sa

from alembic import op
from sqlalchemy.dialects.postgresql import BIGINT

# revision identifiers, used by Alembic.
revision = "23b391f4c353"
down_revision = "2f739f9896c9"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "vote_passed_waitlist",
        sa.Column("channel_id", BIGINT, nullable=False),
        sa.Column("guild_id", BIGINT, nullable=False),
        sa.Column("end_waitlist_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_vote_passed_waitlist")),
    )
    with op.batch_alter_table("vote_passed_waitlist", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_vote_passed_waitlist_end_waitlist_at"),
            ["end_waitlist_at"],
            unique=False,
        )

    op.create_table(
        "vote_passed_waitlist_player",
        sa.Column("vote_passed_waitlist_id", sa.String(), nullable=False),
        sa.Column("player_id", BIGINT, nullable=False),
        sa.Column("queue_id", sa.String(), nullable=True),
        sa.Column("id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["player.id"],
            name=op.f("fk_vote_passed_waitlist_player_player_id_player"),
        ),
        sa.ForeignKeyConstraint(
            ["queue_id"],
            ["queue.id"],
            name=op.f("fk_vote_passed_waitlist_player_queue_id_queue"),
        ),
        sa.ForeignKeyConstraint(
            ["vote_passed_waitlist_id"],
            ["vote_passed_waitlist.id"],
            name=op.f(
                "fk_vote_passed_waitlist_player_vote_passed_waitlist_id_vote_passed_waitlist"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_vote_passed_waitlist_player")),
        sa.UniqueConstraint(
            "player_id",
            "queue_id",
            name=op.f("uq_vote_passed_waitlist_player_player_id"),
        ),
    )
    with op.batch_alter_table("vote_passed_waitlist_player", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_vote_passed_waitlist_player_vote_passed_waitlist_id"),
            ["vote_passed_waitlist_id"],
            unique=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("vote_passed_waitlist_player", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_vote_passed_waitlist_player_vote_passed_waitlist_id")
        )

    op.drop_table("vote_passed_waitlist_player")
    with op.batch_alter_table("vote_passed_waitlist", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_vote_passed_waitlist_end_waitlist_at"))

    op.drop_table("vote_passed_waitlist")
    # ### end Alembic commands ###
